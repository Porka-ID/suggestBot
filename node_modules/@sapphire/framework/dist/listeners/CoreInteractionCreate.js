'use strict';

var pieces = require('@sapphire/pieces');
var Listener_js = require('../lib/structures/Listener.js');
var Events_js = require('../lib/types/Events.js');

var __defProp = Object.defineProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var _CoreListener = class _CoreListener extends Listener_js.Listener {
  constructor(context) {
    super(context, { event: Events_js.Events.InteractionCreate });
  }
  async run(interaction) {
    if (interaction.isChatInputCommand()) {
      this.container.client.emit(Events_js.Events.PossibleChatInputCommand, interaction);
    } else if (interaction.isContextMenuCommand()) {
      this.container.client.emit(Events_js.Events.PossibleContextMenuCommand, interaction);
    } else if (interaction.isAutocomplete()) {
      this.container.client.emit(Events_js.Events.PossibleAutocompleteInteraction, interaction);
    } else if (interaction.isMessageComponent() || interaction.isModalSubmit()) {
      await this.container.stores.get("interaction-handlers").run(interaction);
    } else {
      this.container.logger.warn(`[Sapphire ${this.location.name}] Unhandled interaction type: ${interaction.constructor.name}`);
    }
  }
};
__name(_CoreListener, "CoreListener");
var CoreListener = _CoreListener;
void pieces.container.stores.loadPiece({
  name: "CoreInteractionCreate",
  piece: CoreListener,
  store: "listeners"
});

exports.CoreListener = CoreListener;
//# sourceMappingURL=out.js.map
//# sourceMappingURL=CoreInteractionCreate.js.map