'use strict';

var pieces = require('@sapphire/pieces');
var Identifiers_js = require('../lib/errors/Identifiers.js');
var Precondition_js = require('../lib/structures/Precondition.js');

var __defProp = Object.defineProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var _CorePrecondition = class _CorePrecondition extends Precondition_js.AllFlowsPrecondition {
  constructor(context) {
    super(context, { position: 10 });
  }
  messageRun(_, command, context) {
    return command.enabled ? this.ok() : this.error({ identifier: Identifiers_js.Identifiers.CommandDisabled, message: "This message command is disabled.", context });
  }
  chatInputRun(_, command, context) {
    return command.enabled ? this.ok() : this.error({ identifier: Identifiers_js.Identifiers.CommandDisabled, message: "This chat input command is disabled.", context });
  }
  contextMenuRun(_, command, context) {
    return command.enabled ? this.ok() : this.error({ identifier: Identifiers_js.Identifiers.CommandDisabled, message: "This context menu command is disabled.", context });
  }
};
__name(_CorePrecondition, "CorePrecondition");
var CorePrecondition = _CorePrecondition;
void pieces.container.stores.loadPiece({
  name: "Enabled",
  piece: CorePrecondition,
  store: "preconditions"
});

exports.CorePrecondition = CorePrecondition;
//# sourceMappingURL=out.js.map
//# sourceMappingURL=Enabled.js.map