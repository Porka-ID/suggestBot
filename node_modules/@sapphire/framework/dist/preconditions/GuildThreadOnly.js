'use strict';

var pieces = require('@sapphire/pieces');
var Identifiers_js = require('../lib/errors/Identifiers.js');
var Precondition_js = require('../lib/structures/Precondition.js');

var __defProp = Object.defineProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var _CorePrecondition = class _CorePrecondition extends Precondition_js.AllFlowsPrecondition {
  messageRun(message) {
    return message.thread ? this.ok() : this.makeSharedError();
  }
  async chatInputRun(interaction) {
    const channel = await this.fetchChannelFromInteraction(interaction);
    return channel.isThread() ? this.ok() : this.makeSharedError();
  }
  async contextMenuRun(interaction) {
    const channel = await this.fetchChannelFromInteraction(interaction);
    return channel.isThread() ? this.ok() : this.makeSharedError();
  }
  makeSharedError() {
    return this.error({
      // eslint-disable-next-line deprecation/deprecation
      identifier: Identifiers_js.Identifiers.PreconditionThreadOnly,
      message: "You can only run this command in server thread channels."
    });
  }
};
__name(_CorePrecondition, "CorePrecondition");
var CorePrecondition = _CorePrecondition;
void pieces.container.stores.loadPiece({
  name: "GuildThreadOnly",
  piece: CorePrecondition,
  store: "preconditions"
});

exports.CorePrecondition = CorePrecondition;
//# sourceMappingURL=out.js.map
//# sourceMappingURL=GuildThreadOnly.js.map