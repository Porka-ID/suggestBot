'use strict';

var ILogger_js = require('./ILogger.js');

var __defProp = Object.defineProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var _Logger = class _Logger {
  constructor(level) {
    this.level = level;
  }
  has(level) {
    return level >= this.level;
  }
  trace(...values) {
    this.write(ILogger_js.LogLevel.Trace, ...values);
  }
  debug(...values) {
    this.write(ILogger_js.LogLevel.Debug, ...values);
  }
  info(...values) {
    this.write(ILogger_js.LogLevel.Info, ...values);
  }
  warn(...values) {
    this.write(ILogger_js.LogLevel.Warn, ...values);
  }
  error(...values) {
    this.write(ILogger_js.LogLevel.Error, ...values);
  }
  fatal(...values) {
    this.write(ILogger_js.LogLevel.Fatal, ...values);
  }
  write(level, ...values) {
    if (!this.has(level))
      return;
    const method = _Logger.levels.get(level);
    if (typeof method === "string")
      console[method](`[${method.toUpperCase()}]`, ...values);
  }
};
__name(_Logger, "Logger");
_Logger.levels = /* @__PURE__ */ new Map([
  [ILogger_js.LogLevel.Trace, "trace"],
  [ILogger_js.LogLevel.Debug, "debug"],
  [ILogger_js.LogLevel.Info, "info"],
  [ILogger_js.LogLevel.Warn, "warn"],
  [ILogger_js.LogLevel.Error, "error"],
  [ILogger_js.LogLevel.Fatal, "error"]
]);
var Logger = _Logger;

exports.Logger = Logger;
//# sourceMappingURL=out.js.map
//# sourceMappingURL=Logger.js.map